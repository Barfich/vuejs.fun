@charset "UTF-8";

// Project's global styles: sizes, colors, fonts etc.

*, *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
html {
    font-size: 10px;
    line-height: (20/14); // 14px font to 20px line-height
    height: 100%;
}
body {
    font: {
        family: $font-rubik;
        weight: normal;
        size: 14px;
    }
    color: rgba($color-base, .9);
    background: $color-base-10;
    min-width: 320px;
    @extend %reset-margin;
    @extend %reset-padding;
    height: 100%;
    overflow: hidden;
}
p {
    @extend %reset-margin;
}
h1, h2, h3, h4, h5, h6 {
    @extend %reset-margin;
}
ul, ol {
    list-style: none;
    @extend %reset-margin;
    @extend %reset-padding;
}
a {
    outline: none;
    text-decoration: none;
    color: $color-base;
    -webkit-transition: color .3s ease-in-out, background .3s ease-in-out, fill .3s ease-in-out, border .3s ease-in-out;
    -moz-transition: color .3s ease-in-out, background .3s ease-in-out, fill .3s ease-in-out, border .3s ease-in-out;
    -o-transition: color .3s ease-in-out, background .3s ease-in-out, fill .3s ease-in-out, border .3s ease-in-out;
    transition: color .3s ease-in-out, background .3s ease-in-out, fill .3s ease-in-out, border .3s ease-in-out;
    &:hover, &:active {
        color: $color-accent;
    }
}
svg {
    display: block;
    width: 100%;
    height: 100%;
}
// App entry styles
#app {
    width: 100%;
    overflow: hidden;
    height: 100%;
    padding: 76px 0 0 320px;
    @include media($mainUIFrom) {
        padding-left: 66px;
        padding-top: 66px;
    }
    @include media($mainUITo - 1) {
        padding-left: 0;
    }

}
#overlay {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(#000, .7);
    z-index: 9;
    visibility: hidden;
    opacity: 0;
    @include transition-single(all, .3s, ease-in-out);
    &.sb-open {
        visibility: visible;
        opacity: 1;
    }
}
#app-content {
    overflow: auto;
    @include transition-single(transform, .3s, ease-in-out);
    position: relative;
    &.sb-open {
        @include translateX($sideBarMobWidth);
    }
}

// Avatars classes and colors generator
// 1. avatars-first-colors classes
.af {
    @each $name, $color in $avatars-first-colors {
        &#{$name} {
            color: $color;
        }
    }
}
// 2. avatars-second-colors classes
.as {
    @each $name, $color in $avatars-second-colors {
        &#{$name} {
            fill: $color;
        }
    }
}